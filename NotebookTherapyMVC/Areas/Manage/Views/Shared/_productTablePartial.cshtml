@model List<ProductGetDto>
<table id="responsive-data-table" class="table">
    <thead>
        <tr>
            <th>#</th>
            <th>Image</th>
            <th>Name</th>
            <th>LastPrice</th>
            <th>Rating</th>
            <th>Price</th>
            <th>OnSale</th>
            <th>Category</th>
            <th>Collection</th>
            <th>Sizes</th>
            <th>Color</th>
            <th>Bundles</th>
            <th>Review Count</th>
            <th>Favourite Count</th>
            <th>Status</th>
            <th>Action</th>
            <th>View</th>
        </tr>
    </thead>
    <tbody>
        @foreach (ProductGetDto product in Model)
        {
            <tr>
                <td>@product.Id</td>
                <td>
                    <img class="tbl-thumb" src="~/uploads/product/@(product.ProductImages.FirstOrDefault().ImagePath)" alt="Product Image" />
                </td>
                <td>@product.Name</td>
                <td>@product.LastPrice</td>
                <td>@product.TotalRating</td>
                <td>@product.Price</td>
                <td>
                    @{
                        if (!product.isSale)
                        {
                            @:<span class="badge badge-secondary">Not on Sale</span>
                        }
                        else
                        {
                            @:<span class="badge badge-warning">On Sale</span>
                        }
                    }
                </td>
                <td>
                    @(
                product.Category is not null
                ? product.Category.Name
                : "Category is not available"
                )
                </td>
                <td>
                    @(
                product.ProductCollection is not null
                ? product.ProductCollection.Name
                : "No Collection"
                )
                </td>
                <td>
                    @{
                        if (product.ProductSizes.Count > 0)
                        {
                            foreach (ProductSizeGetDto size in product.ProductSizes)
                            {
                                @size.Size.Name
                            }
                        }
                        else
                        {
                            @:No Sizes
                        }
                    }
                </td>
                <td style="background-color:@product.Color.Name"></td>
                <td>
                    @{
                        if (product.ProductBundles.Count > 0)
                        {
                            foreach (ProductBundleGetDto bundle in product.ProductBundles)
                            {
                                @bundle.Bundle.Name
                            }
                        }
                        else
                        {
                            @:No Bundles
                        }
                    }
                </td>
                <td>@product.Reviews.Count</td>
                <td>@product.Favourites.Count</td>
                <td>
                    @{
                        if (product.isDeleted)
                        {
                            @:<span class="badge badge-danger">Inactive</span>
                        }
                        else
                        {
                            @:<span class="badge badge-success">Active</span>
                        }
                    }
                </td>
                <td>
                    <div class="btn-group">
                        <button asp-action="Get" asp-controller="Product" asp-route-id="@product.Id" type="button" class="btn btn-outline-success">Info</button>
                        @{
                            <button type="button" class="btn btn-outline-success dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-display="static">
                                <span class="sr-only">Info</span>
                            </button>
                            if (!product.isDeleted)
                            {
                                <div class="dropdown-menu">
                                    <a asp-action="Update" asp-controller="Product" asp-route-id="@product.Id" class="dropdown-item">Edit</a>
                                    <a asp-action="Delete" asp-controller="Product" asp-route-id="@product.Id" class="dropdown-item">Delete</a>
                                </div>
                            }
                            else
                            {
                                <div class="dropdown-menu">
                                    <a asp-action="Recover" asp-controller="Product" asp-route-id="@product.Id" class="dropdown-item">Recover</a>
                                    <a asp-action="HardDelete" asp-controller="Product" asp-route-id="@product.Id" class="dropdown-item">Permanently Delete</a>
                                </div>
                            }
                        }
                    </div>
                </td>
                <td>
                    <a href="javascript:0" data-bs-toggle="modal" data-bs-target="#modal-contact" class="view-detail" id="infoBtn" data-id="@product.Id">
                        <i class="mdi mdi-eye-plus-outline"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
